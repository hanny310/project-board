<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JPA 연결테스트" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-03-23T06:21:35" hostname="DESKTOP-IRLJETI" time="0.613">
  <properties/>
  <testcase name="insert 테스트" classname="com.fast.projectboard.repository.JpaRepositoryTest" time="0.499"/>
  <testcase name="select 테스트" classname="com.fast.projectboard.repository.JpaRepositoryTest" time="0.044"/>
  <testcase name="delete 테스트" classname="com.fast.projectboard.repository.JpaRepositoryTest" time="0.049"/>
  <testcase name="update 테스트" classname="com.fast.projectboard.repository.JpaRepositoryTest" time="0.014"/>
  <system-out><![CDATA[15:21:33.416 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [JpaRepositoryTest]: using SpringBootContextLoader
15:21:33.420 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.fast.projectboard.repository.JpaRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:21:33.420 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.fast.projectboard.repository.JpaRepositoryTest]: JpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:21:33.451 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using ContextCustomizers for test class [JpaRepositoryTest]: [DisableAutoConfigurationContextCustomizer, DisableObservabilityContextCustomizer, TypeExcludeFiltersContextCustomizer, PropertyMappingContextCustomizer, Customizer, ImportsContextCustomizer, ExcludeFilterContextCustomizer, DuplicateJsonObjectContextCustomizer, MockitoContextCustomizer]
15:21:33.497 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\rhw\Documents\Git-personal\project-board\build\classes\java\main\com\fast\projectboard\ProjectBoardApplication.class]
15:21:33.498 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.fast.projectboard.ProjectBoardApplication for test class com.fast.projectboard.repository.JpaRepositoryTest
15:21:33.515 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners for test class [JpaRepositoryTest]: [ServletTestExecutionListener, DirtiesContextBeforeModesTestExecutionListener, ApplicationEventsTestExecutionListener, MockitoTestExecutionListener, DependencyInjectionTestExecutionListener, DirtiesContextTestExecutionListener, TransactionalTestExecutionListener, SqlScriptsTestExecutionListener, EventPublishingTestExecutionListener, RestDocsTestExecutionListener, MockRestServiceServerResetTestExecutionListener, MockMvcPrintOnlyOnFailureTestExecutionListener, WebDriverTestExecutionListener, MockWebServiceServerTestExecutionListener, ResetMocksTestExecutionListener]
15:21:33.516 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: class [JpaRepositoryTest], class annotated with @DirtiesContext [false] with mode [null]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.4)

2023-03-23T15:21:33.844+09:00  INFO 18536 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Starting JpaRepositoryTest using Java 17.0.6 with PID 18536 (started by rhw in C:\Users\rhw\Documents\Git-personal\project-board)
2023-03-23T15:21:33.844+09:00 DEBUG 18536 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Running with Spring Boot v3.0.4, Spring v6.0.6
2023-03-23T15:21:33.845+09:00  INFO 18536 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : No active profile set, falling back to 1 default profile: "default"
2023-03-23T15:21:34.129+09:00  INFO 18536 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-23T15:21:34.168+09:00  INFO 18536 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 2 JPA repository interfaces.
2023-03-23T15:21:34.214+09:00  INFO 18536 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-03-23T15:21:34.350+09:00  INFO 18536 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:5c0f7541-3ab0-4908-8b94-5260791333ad;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-03-23T15:21:34.557+09:00  INFO 18536 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-23T15:21:34.600+09:00  INFO 18536 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.1.7.Final
2023-03-23T15:21:34.879+09:00  INFO 18536 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table if exists article cascade 
Hibernate: 
    
    drop table if exists article_comment cascade 
Hibernate: 
    
    create table article (
       id bigint generated by default as identity,
        content varchar(10000) not null,
        created_at timestamp(6) not null,
        created_by varchar(100) not null,
        hashtag varchar(255),
        modified_at timestamp(6) not null,
        modified_by varchar(100) not null,
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    
    create table article_comment (
       id bigint generated by default as identity,
        content varchar(500) not null,
        created_at timestamp(6) not null,
        created_by varchar(100) not null,
        modified_at timestamp(6) not null,
        modified_by varchar(100) not null,
        article_id bigint not null,
        primary key (id)
    )
Hibernate: create index IDX571gx7oqo5xpmgocegaidlcu9 on article (title)
Hibernate: create index IDXai44fu6vaa28ebpydglnv7t3e on article (hashtag)
Hibernate: create index IDXrmt77yibijtk4sarremr67saa on article (created_at)
Hibernate: create index IDXjl4utii2etiocimt799wvtuvv on article (created_by)
Hibernate: create index IDXpieqqnljv147sefofs56h25qx on article_comment (content)
Hibernate: create index IDXh1jx107qecntcbcpc2vfb07ij on article_comment (created_at)
Hibernate: create index IDXc6pa61djuf2o8xnceyyvtdbaq on article_comment (created_by)
Hibernate: 
    
    alter table if exists article_comment 
       add constraint FKghmocqkgqs5tkmucf5putw64t 
       foreign key (article_id) 
       references article
2023-03-23T15:21:35.561+09:00  INFO 18536 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-23T15:21:35.570+09:00  INFO 18536 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-23T15:21:35.904+09:00  INFO 18536 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Started JpaRepositoryTest in 2.35 seconds (process running for 3.15)
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    insert 
    into
        article
        (id, content, created_at, created_by, hashtag, modified_at, modified_by, title) 
    values
        (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
Hibernate: 
    select
        a1_0.article_id,
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.modified_at,
        a1_0.modified_by 
    from
        article_comment a1_0 
    where
        a1_0.article_id=? 
    order by
        a1_0.id
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article_comment 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    update
        article 
    set
        content=?,
        created_at=?,
        created_by=?,
        hashtag=?,
        modified_at=?,
        modified_by=?,
        title=? 
    where
        id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
